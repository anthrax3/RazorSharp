@using System.Text.RegularExpressions;
@functions {

    public static string CleanHtml(string value)
    {
        var Step1 = Regex.Replace(value, @"<[^>]+>|&nbsp;", "").Trim();
        var Step2 = Regex.Replace(Step1, @"\s{2,}", " ");
        var Result = Step2.ToString();
        return Result;
    }
}
@{
    var Query = Request["q"];
    var ResultsTitle = String.Empty;
    var PageSize = 5;
    var TotalPages = 0;
    var Count = 0;
    var Page = Request["page"];
    if (string.IsNullOrEmpty(Page))
    {
        Page = "1";
    }
    var Offset = (Page.AsInt(1) - 1) * PageSize;
    IEnumerable<dynamic> Data = Enumerable.Empty<dynamic>();
    if (!String.IsNullOrEmpty(Query))
    {
        ResultsTitle = "Your search for \"" + Query +"\" returned the following results";
        using (var Db = Database.Open(Functions.GetDBName()))
        {
            var SqlCount = "Select Count(*) From Pages Where pName Like @0 Or pTitle Like @0 Or pText Like @0";
            Count = (int)Db.QueryValue(SqlCount, "%" + Query + "%");
            TotalPages = (int)Math.Ceiling((double)Count / PageSize);
            var SqlSelect = "Select pName, pTitle, pText From Pages Where pName Like @0 Or pTitle Like @0 Or pText Like @0 Order By pTitle Offset @1 Rows Fetch Next @2 Rows Only;";
            Data = Db.Query(SqlSelect, "%" + Query + "%", Offset, PageSize);
        }
    }
    else
    {
        ResultsTitle = "No search query received.";
    }
}
<h4>@Html.Raw(ResultsTitle)</h4>
<!-- Search Results -->
<ul class="list-unstyled list-results">
    @if (Data.Count() > 0)
    {
        foreach (var row in Data)
        {
            <li class="type-page">
                <h4><a href="@Href("~/" + @row.pName)">@row.pTitle</a></h4>
                <span class="result-url">@Request.Url.GetLeftPart(UriPartial.Authority)/@row.pName</span>
                @if (CleanHtml(row.pText).Length > 250)
                {
                    <p>@Html.Raw(CleanHtml(row.pText).Substring(0, 250) + "...")</p>
                }
                else
                {
                    <p>@Html.Raw(CleanHtml(row.pText))</p>
                }
                <hr />
            </li>
        }
    }
    else
    {
        <li class="type-page">
            <p>No results found for your search query.</p>
        </li>
    }
</ul>
<p>Page @Page of @TotalPages</p>
<!-- End Search Results -->
<!-- Pagination -->
<div class="text-left">
    <ul class="pagination">
        @{
            <li>
                <a href="@Href("~/Results?page=1&q=" + Query)"><i class="glyphicon glyphicon-chevron-left"></i></a>
            </li>
            for (var i = 1; i <= TotalPages + 1; i++)
            {
               <li @if(Page.AsInt(1) == i) { <text>class="active"</text> }>
                  <a href="@Href("~/Results?page=" + i + "&q=" + Query)">@i</a>
               </li>
            }
            <li>
                <a href="@Href("~/Results?page=" + TotalPages + "&q=" + Query)"><i class="glyphicon glyphicon-chevron-right"></i></a>
            </li>

        }
    </ul>
</div>
<!-- End Pagination -->